from matplotlib import pyplot as plt
from plot_hardware import qubit_count


# Plotting Method
def plot_circuit_series(filename, measurements, qubits, circuit_values):
    x = "measurement_frequency"
    y = "time(ms)"

    for i in range(0, len(qubits)):
        plt.plot(measurements, circuit_values[i], label="qubit num. "+str(qubits[i]))
    plt.legend()
    plt.xlabel(x)
    plt.ylabel(y)
    plt.xscale('log')
    plt.savefig(filename)
    plt.show()


meaurmenent_counts = [1, 10, 100, 1000, 10000]

# Fourier Checking
fourier_5 = [0.0015552043914794922, 0.00419163703918457, 0.004338979721069336, 0.004442453384399414, 0.004245664596557617]
fourier_15 = [0.0017101764678955078,0.0016987323760986328,0.0018279552459716797,0.0016982555389404297, 0.0017032623291015625]
fourier_25 = [0.0018101764678955078,0.0018987323760986328,0.0019279552459716797,0.0018982555389404297, 0.0018032623291015625]

fourier = [fourier_5, fourier_15, fourier_25]

plot_circuit_series("error-mitigation/fourier", meaurmenent_counts, qubit_count, fourier)

# Graph State
graph_state_5 = [0.004237651824951172, 0.004283905029296875, 0.004235744476318359, 0.004435300827026367, 0.0033478736877441406]
graph_state_15 = [0.0025963783264160156, 0.0032482147216796875, 0.0017275810241699219, 0.0037376880645751953, 0.0032036304473876953]
graph_state_25 = [0.0024957656860351562, 0.001695394515991211, 0.002837657928466797, 0.0021958351135253906, 0.0032296180725097656]

graph_state = [graph_state_5, graph_state_15, graph_state_25]

plot_circuit_series("error-mitigation/graph_state.png", meaurmenent_counts, qubit_count, graph_state)

# Hidden Linear Functions
hlf_5 = [0.004270792007446289, 0.004221439361572266, 0.002185344696044922, 0.004270315170288086, 0.0043141841888427734]
hlf_15 = [0.002771139144897461, 0.0024518966674804688, 0.002363443374633789, 0.003195047378540039, 0.0030210018157958984]
hlf_25 = [0.00293731689453125, 0.0027055740356445312, 0.0023648738861083984, 0.0028791427612304688, 0.002352476119995117]

hlf = [hlf_5, hlf_15, hlf_25]

plot_circuit_series("error-mitigation/hlf.png", meaurmenent_counts, qubit_count, hlf)

# IQP
iqp_5 = [0.0024025440216064453, 0.0019953250885009766, 0.0028755664825439453, 0.0024080276489257812, 0.0031311511993408203]
iqp_15 = [0.0021255016326904297, 0.0020329952239990234, 0.0020914077758789062, 0.0020284652709960938, 0.002021312713623047]
iqp_25 = [0.0024111270904541016, 0.002452850341796875, 0.0024459362030029297, 0.002575397491455078, 0.002641916275024414]

iqp = [iqp_5, iqp_15, iqp_25]

plot_circuit_series("error-mitigation/iqp.png", meaurmenent_counts, qubit_count, iqp)

# Quantum Volume
qv_5 = [0.0019474029541015625, 0.0021491050720214844, 0.0019631385803222656, 0.001760244369506836, 0.002580404281616211]
qv_15 = [0.0018846988677978516, 0.0017895698547363281, 0.001806497573852539, 0.0018258094787597656, 0.0018625259399414062]
qv_25 = [0.002277374267578125, 0.002415895462036133, 0.0023734569549560547, 0.002448558807373047, 0.0023140907287597656]

qv = [qv_5, qv_15, qv_25]

plot_circuit_series("error-mitigation/qv.png", meaurmenent_counts, qubit_count, qv)

# Phase Estimation
phase_estimation_5 = [0.0023458003997802734, 0.002457857131958008, 0.0024001598358154297, 0.0023598670959472656, 0.002312183380126953]
phase_estimation_15 = [0.0009253025054931641, 0.0009300708770751953, 0.0009174346923828125, 0.0009143352508544922, 0.0009362697601318359]
phase_estimation_25 = [0.0014119148254394531, 0.0013856887817382812, 0.0013885498046875, 0.0013506412506103516, 0.0013644695281982422]

phase_estimation = [phase_estimation_5, phase_estimation_15, phase_estimation_25]

plot_circuit_series("error-mitigation/phase_estimation.png", meaurmenent_counts, qubit_count, phase_estimation)
