{
    "BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "NoiseSimulatorBenchmarkSuite.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "NoiseSimulatorBenchmarkSuite.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "NoiseSimulatorBenchmarkSuite.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "NoiseSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "OutputSimulatorBenchmarkSuite.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "OutputSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "basic.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "noise.NoiseSimulatorBenchmarkSuite.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise.NoiseSimulatorBenchmarkSuite.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise.NoiseSimulatorBenchmarkSuite.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise.NoiseSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_12q.DampingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.DampingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "12"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_12q.DampingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.DampingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "12"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_12q.DepolarizingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.DepolarizingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "12"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_12q.DepolarizingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.DepolarizingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "12"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_12q.NoiseSimulatorBenchmarkSuite.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.NoiseSimulatorBenchmarkSuite.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_12q.NoiseSimulatorBenchmarkSuite.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_12q.NoiseSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_16q.DampingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.DampingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "16"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_16q.DampingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.DampingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "16"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_16q.DepolarizingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.DepolarizingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "16"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_16q.DepolarizingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.DepolarizingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "16"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_16q.NoiseSimulatorBenchmarkSuite.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.NoiseSimulatorBenchmarkSuite.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_16q.NoiseSimulatorBenchmarkSuite.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_16q.NoiseSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_20q.DampingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.DampingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "20"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_20q.DampingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.DampingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'damping'"
            ],
            [
                "20"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_20q.DepolarizingError.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.DepolarizingError.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "20"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_20q.DepolarizingError.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.DepolarizingError.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'depolarizing'"
            ],
            [
                "20"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "noise_20q.NoiseSimulatorBenchmarkSuite.track_density_matrix": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_density_matrix(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_DENSITY_MATRIX_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.NoiseSimulatorBenchmarkSuite.track_density_matrix",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "2556dfe00649d8737c244683a461e2e86ad191eb2e254caef5744127af9434e6"
    },
    "noise_20q.NoiseSimulatorBenchmarkSuite.track_statevector": {
        "code": "class NoiseSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "noise_20q.NoiseSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "bce0a474f33fc24125e189f95b5e6c9d9da496180fbecd6d3021a0e72ca227e5"
    },
    "output.OutputSimulatorBenchmarkSuite.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output.OutputSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_05q.ExpVal.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_05q.ExpVal.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'expval'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_05q.OutputSimulatorBenchmarkSuite.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_05q.OutputSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_05q.Sampling.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_05q.Sampling.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'sampling'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_15q.ExpVal.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_15q.ExpVal.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'expval'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_15q.OutputSimulatorBenchmarkSuite.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_15q.OutputSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_15q.Sampling.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_15q.Sampling.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'sampling'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_25q.ExpVal.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_25q.ExpVal.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'expval'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_25q.OutputSimulatorBenchmarkSuite.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_25q.OutputSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "output_25q.Sampling.track_statevector": {
        "code": "class OutputSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "output_25q.Sampling.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'quantum_volume'"
            ],
            [
                "'sampling'"
            ],
            [
                "1",
                "10",
                "100",
                "1000",
                "10000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9aafe8456411d53b5712fc88608f5fd269cd74c45d4d206ba39966ec0465ce3d"
    },
    "version": 2
}