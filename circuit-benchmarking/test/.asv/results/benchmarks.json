{
    "BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.PauliRotationCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.PauliRotationCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.PauliRotationCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.PauliRotationCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_05q.StandardGates.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.StandardGates.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'barrier'",
                "'mc_phase'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_05q.StandardGates.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_05q.StandardGates.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'barrier'",
                "'mc_phase'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "5"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.PauliRotationCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.PauliRotationCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.PauliRotationCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.PauliRotationCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_15q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_15q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_15q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "15"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ArithmeticCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ArithmeticCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ArithmeticCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ArithmeticCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'integer_comparator'",
                "'weighted_adder'",
                "'quadratic_form'",
                "'draper_qft_adder'",
                "'cdkm_ripple_carry_adder'",
                "'vbe_ripple_carry_adder'",
                "'hrs_cum_mult'",
                "'rgqft_mult'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.BasicChangeCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicChangeCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.BasicChangeCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicChangeCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'qft'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.BasicSimulatorBenchmarkSuite.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicSimulatorBenchmarkSuite.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.BasicSimulatorBenchmarkSuite.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.BasicSimulatorBenchmarkSuite.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [],
            [],
            [],
            [],
            []
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.NLocalCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.NLocalCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.NLocalCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.NLocalCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'real_amplitudes'",
                "'real_amplitudes_linear'",
                "'efficient_su2'",
                "'efficient_su2_linear'",
                "'excitation_preserving'",
                "'excitation_preserving_linear'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ParticularQuantumCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ParticularQuantumCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ParticularQuantumCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ParticularQuantumCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'fourier_checking'",
                "'graph_state'",
                "'hidden_linear_function'",
                "'iqp'",
                "'quantum_volume'",
                "'phase_estimation'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.PauliRotationCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.PauliRotationCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.PauliRotationCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.PauliRotationCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'linear_pauli_rotations'",
                "'poly_pauli_rotations'",
                "'piecewise_lin_pauli_rotations'",
                "'piecewise_poly_pauli_rotations'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "basic_25q.ProbabilityDistributionCircuits.track_matrix_product_state": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_matrix_product_state(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_MPS_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ProbabilityDistributionCircuits.track_matrix_product_state",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "e6c8cbcb6f421c681e5a07c26e10b3b1fbbdade6c5359b3ad11e69cafd9ec62d"
    },
    "basic_25q.ProbabilityDistributionCircuits.track_statevector": {
        "code": "class BasicSimulatorBenchmarkSuite:\n    def track_statevector(self, app, measure, measure_count, noise_name, qubit):\n        return self._run(self.RUNTIME_STATEVECTOR_CPU, app, measure, measure_count, noise_name, qubit)",
        "name": "basic_25q.ProbabilityDistributionCircuits.track_statevector",
        "param_names": [
            "application",
            "measure_method",
            "measure_counts",
            "noise",
            "qubit"
        ],
        "params": [
            [
                "'uniform_distribution'",
                "'normal_distribution'",
                "'log_normal_distribution'"
            ],
            [
                "'sampling'"
            ],
            [
                "1000"
            ],
            [
                "'ideal'"
            ],
            [
                "25"
            ]
        ],
        "timeout": 600,
        "type": "track",
        "unit": "unit",
        "version": "9f3f79f908eac3ac86f38b9716601d2fa7f98157d79a82c09e71d622ff3c7a91"
    },
    "version": 2
}